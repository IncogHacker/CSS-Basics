/** ------------------------------------- -->
/**  UNITS IN CSS 
/** ---------------------------------------- -->

/** Absolute Lengths:  The absolute length units are fixed and a length expressed in any of these will appear as exactly that size. */

/** Relative Lengths: Relative length units specify a length relative to another length property. Relative length units scale better between different rendering medium(devices). */

/*? Pixels (px): px is an absolute unit of measurement in CSS, representing the smallest unit of screen space.
It provides a fixed and consistent size on all devices and screens. */

/*? Percentages (%): Percentages are relative units based on the parent element's size or the containing block.
Widely used in creating responsive layouts.
Example: width: 50%; sets an element's width to 50% of its parent's width. */

/*? Em (em): em is a relative unit that is calculated based on the font size of the parent element.
When you set an element's size in em, it's relative to the font size of its nearest parent with a specified font size. */

/*? Root Em (rem): rem is also a relative unit like em, but it's based on the font size of the root (html) element.
Using rem ensures that the size is consistent throughout the entire document, making it especially useful for responsive design. */

/** ------------------------------------- -->
/**  IMPORTANT TIPS + NOTES
/** ---------------------------------------- -->

/*? px provides fixed sizes and is not recommended for responsive design as it doesn't adapt to different screen sizes and font settings. However, it can be useful for precise control over small elements. */

/*? em is useful for relative sizing within the context of the parent element's font size. It allows for more flexible and scalable designs. */

/*? rem is the preferred choice for responsive design as it offers a consistent relative size based on the root font size. It's easier to maintain and provides better scalability. */

/** ---------------------------------------- --> */

main{
    background-color: grey;
       
}

/*!For Pixels */

/* h1{
   font-size:54px;
    color :purple;
} */

 /* p{
    font-size:36px;
} */

/* li{
    font-size: 44px;
} */ 

/*! PERCENTAGE for 100% = 16 px */

/** for 54 px = 337.5% */

/* h1{
    font-size: 337.5%;    
}  */


/*! For -1-em(element) = 16px ; */
 /* h1{
    font-size: 3.375em;
 }

 p{
    font-size : 2.25em;
 } */

/* ----------------------------------- */
 

 /* .parent{
    font-size: 10px; 
    
 } */

/* here 1em = 10 px */

/* ------------------------------------ */

 /* li{
    font-size: 2.75em ;             
 } */

 /*? 1em = 10px 
 /*? >> 2.75 em =27.5px; */


 /* ******************************************** **********************************/

 /*? for 1 rem(root element) = we can specify  the font size of our will */

 /* ! we need 1rem = 10 px , it makes our life easy */

 /* 16 px = 100%; (100/16=6.25)
 1 px = 6.25%
 10 px= 62.5%; */

 html{
    font-size : 40.5%; /*? (here we can also write px but it is absolute unit so we write percentage jo change hota rhega and this is root element font size and all other element dependent on this rem..) */
 }
  
 /* 1rem =10px; */

 h1
 {
    font-size : 5.4rem;
 }


 p{
    font-size: 3.6rem;
 }

 .parent{
    font-size : 20px;  /* (in this case of rem it is not change all font similar)*/
 }

 li{
    font-size: 4.4rem;
 }


 
 
/** ------------------------------------- -->
/**  INTERVIEW QUESTIONS
/** ---------------------------------------- -->

/*? 1: What is the main difference between em and rem units in CSS? */


/*? 2: How does using rem units in your CSS benefit a responsive web design?  ⭐⭐⭐ */

/*? 3: Can you explain how the font-size property in em units works when nested within parent elements with different font sizes? */

/* parents ki size change krenge to em uske hisab se change hoga */
 
 

