/** ------------------------------------- -->
/**  DISPLAY IN CSS  
/** ---------------------------------------- -->

/*todo  Block-Level Elements: */
/*?  display: block üëâ The block value makes the element a block-level element. Block-level elements create a new "block formatting context" and take up the full width available. They start on a new line, pushing subsequent elements below them. */

/*? New Line Start: They start on a new line in the webpage layout.
Full Width: They often take up the entire width of their container.
No Side-by-Side: They don't sit next to each other horizontally.
Common Examples: Include paragraphs, headings, lists, and containers.
Vertical Stacking: They stack on top of each other, creating a vertical layout. */

/* Use Cases:
Creating standalone elements like paragraphs, headings, divs, and dividers.
Structuring the main content of a webpage, such as articles or sections.  */

/** ------------------------------------------------------------------------------------------------------ */

/*todo Inline Elements: */

/*? display: inline  üëâ The inline value makes the element an inline-level element. Inline elements only take up as much width as necessary, and they do not create a new block formatting context. Inline elements can appear on the same line as other inline elements. */

/* Inline Flow: They flow within the content and don't start on new lines.
Space-Efficient: They take up only as much width as necessary.
Side-by-Side: They can sit next to each other horizontally.
Common Examples: Include links, spans, and emphasis tags.
Text Enhancements: Often used for styling text or adding small inline elements. */

/* Use Cases:
Styling text elements like links (<a>) or spans within paragraphs.
Displaying elements side by side within a paragraph. */

/** ------------------------------------------------------------------------------------------------------ */

/*todo Inline-Block Elements: */ 

/*? display: inline-block üëâ  The inline-block value combines aspects of both block and inline. Elements with inline-block behave like inline elements but can have dimensions (width and height) and vertical alignment. */

/* Mixed Behavior: They combine aspects of both inline and block elements.
Width and Height: You can set their dimensions (width and height).
In-Line Flow: They can sit next to each other horizontally.
Space-Efficient: They take up only as much width as necessary.
Common Examples: Used for creating custom-styled buttons, images with captions, and 

Use Cases:
Creating custom-styled buttons.
Displaying images with captions or descriptions next to them. */

/** ------------------------------------------------------------------------------------------------------ */


@import url('https://fonts.googleapis.com/css2?family=Honk&family=Nabla&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Whisper&display=swap');

*{
    padding:0;
    margin:0;
    box-sizing:border-box;
}

header{  
    width:1000px;
     /* padding-top:50px; */
    font-size: 70px;
    box-sizing:border-box;
    border:5px solid red;
    margin:20px;
    padding-left:20px;
}

main{
       
    width:1700px;
    height: 100vh;
    margin:20px;
    font-size:3rem;
    font-family: "Roboto", sans-serif;;
    
    .one{
              color:white;
              border-radius: 20px;
              background-image: linear-gradient(to right, #082a5c, #183776, #294591, #3b52ad, #5060c9);
              margin-bottom: 5px;
    }

    .two
    {
        color:white;
        border-radius: 20px;
        background-image: linear-gradient(to left, #16386b, #204282, #2d4d9a, #3d57b1, #5060c9);
        margin-bottom: 5px;
    }


    #first{
  
        border-radius: 20px;
        color:white;
        background-image: linear-gradient(to right, #4462cd, #4b6cd1, #5275d5, #5a7fd9, #6388dc, #6090de, #6098e0, #62a0e1, #5ea8e0, #5fafdd, #66b6da, #70bcd6);
        margin-bottom: 5px;
   
}
    #S{
        border-radius: 20px;
        background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);
        margin-bottom: 500px;
        margin-left: 70px;
    }
    #third
    {  
        border-radius: 20px;
        background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);
        margin-top: 10px;

    }
    #fourth
    {
        border-radius: 20px;
        background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);
        margin-left:10px;
        margin-top: 10px;
    }


}
/** ------------------------------------- -->
/**  INTERVIEW QUESTIONS  
/** ---------------------------------------- -->

/*? 1: What is the main difference between display: block; and display: inline; elements in CSS? */

/*? 1: What does display: none; do to an element's accessibility? */
/* It makes the element completely inaccessible to screen readers and keyboard navigation. */

/*! display: none; */

/*? 3: How do you center an element horizontally using display: block;? */
/* To center a display: block; element horizontally, you can set its left and right margins to auto. */

/* !  p{
      width :500px;   
       margin : 0 auto;  
     } */
   
   


/*? 4: What is the default behavior of display: inline; elements with regard to margin and padding? */
/* display: inline; elements don't respect top and bottom margins or padding (only it apply when we use background image on that time), only left and right. Also width and height is not accepted */

/*? 5: How can you make an inline element like a link or a span act like a block-level element? ‚≠ê‚≠ê*/
/* You can apply display: block; or display: inline-block; to make an inline element behave like a block-level element. */

/*? 6: What is the impact of applying display: block; to an anchor <a> element? */
/* Applying display: block; to an anchor element allows you to set its width, height, and apply padding or margin. This is often used for creating custom-styled buttons. */
